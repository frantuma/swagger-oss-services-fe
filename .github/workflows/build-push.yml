name: Build and Push

on:
  workflow_dispatch:
    branches: ["main"]
    inputs:
      dockerNamespace:
        description: 'Docker Namespace'
        default: 'swaggerapi'
  schedule:
    - cron: '0 * * * *'
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_SB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SB_PASSWORD }}
      - name: check for new Swagger UI image
        run: |
          echo "running"
          echo "env.DOCKER_NS: ${{ env.DOCKER_NS }}"
          DOCKER_NS=${{ env.DOCKER_NS }}
          echo "DOCKER_NS: $DOCKER_NS"
          if [[ -z "$DOCKER_NS" ]];
          then
            echo "missing DOCKER_NS: use default from secrets"
            DOCKER_NS=${{ secrets.DOCKER_NS }}
            if [[ -z "$DOCKER_NS" ]];
            then
              echo "still missing DOCKER_NS: use default"
              DOCKER_NS="swaggerapi"
            fi
            echo "DOCKER_NS=$DOCKER_NS" >> $GITHUB_ENV
          fi
          echo "effective DOCKER_NS: $DOCKER_NS"
          echo "effective env.DOCKER_NS: ${{ env.DOCKER_NS }}"
          UI_NEW=0
          echo "getting UI"
          UI_LATEST=$(curl -s -X 'GET'   'https://hub.docker.com/v2/namespaces/swaggerapi/repositories/swagger-ui/tags'   -H 'accept: application/json' | jq '.results[] | select(.name=="latest") | .tag_last_pushed[0:19] | strptime("%Y-%m-%dT%H:%M:%S") | mktime')
          CUSTOM_LATEST_URL=https://hub.docker.com/v2/namespaces/$DOCKER_NS/repositories/swagger-oss-services-fe/tags
          echo "getting Custom $CUSTOM_LATEST_URL"
          CUSTOM_LATEST=$(curl -s -X 'GET'   $CUSTOM_LATEST_URL -H 'accept: application/json' | jq '.results[] | select(.name=="latest") | .tag_last_pushed[0:19] | strptime("%Y-%m-%dT%H:%M:%S") | mktime')
          if [[ ! -z "$UI_LATEST" && ! -z "$CUSTOM_LATEST" && $UI_LATEST -gt $CUSTOM_LATEST ]]; 
          then
            echo "new Swagger UI image found"
            UI_NEW=1
          else
            echo "no new swagger UI image found, aborting."
          fi
          echo "UI_NEW from script: $UI_NEW"
          echo "UI_NEW=$UI_NEW" >> $GITHUB_ENV
      - name: Build and push
        if: env.UI_NEW == 1
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_NS }}/swagger-oss-services-fe:latest
    env:
      DOCKER_NS: ${{ github.event.inputs.dockerNamespace }}
      UI_NEW: 0
